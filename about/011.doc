1	常用groovy
1.1	any
任何、任意一个。
对多个对象进行判断，返回值为TRUE/FALSE
def List = [“a”,”ab”,”abc”];
List.any{element->
   //element.length() > 0;
   //element == “a”
}
只要有任意一个符合，就会返回true,否则返回false
1.2	grep
def list = ['a', 'ab', 'abc']
return list.grep{ elem -> 
 //elem.length() > 2
elem == "ab"
}

def list = ['a', 'ab', 'abc']
def b = list?.grep(~/ /)
return b
1.3	find
 def list = ['a', 'ab', 'abc','ab']
return list.find{ elem -> 
 //elem.length() > 2
elem == "ab"
} 

com.huawei.bes.om.base.order.core.context.ContextFactory.resetContext("orderContext", "id");
$BindingContext("orderContext").orderId = "940122222224697232" as BigDecimal;
def orderModel = $BindingContext("orderContext")._OrderModel;

def a;
for (orderItem in orderModel.order.OrderItem) {
    if (orderItem?.actionType == "add" && orderItem?.itemType == "offering") {
        a=orderItem;
        break;
    }
}

//a = orderModel?.order?.OrderItem?.find{it?.actionType == "add" && it?.itemType == "offering"};
return a


1.4	findAll
def list = ['a', 'ab', 'abc','ab']
return list.findAll{ elem -> 
 //elem.length() > 2
elem == "ab"
} 
1.5	each
com.huawei.bes.om.base.order.core.context.ContextFactory.resetContext("orderContext", "id");
$BindingContext("orderContext").orderId = "940122222224697232" as BigDecimal;
def orderModel = $BindingContext("orderContext")._OrderModel;
def orderItemProp = [];

for (orderItem in orderModel.order.OrderItem) {
    for (prop in orderItem.OrderItemProp) {
        if (prop.propCode == "CLIPStatus") {
            orderItemProp .add(prop)        
        }
    }
}
 orderModel.order.OrderItem.each{orderItem->
    orderItem.OrderItemProp.each{prop->
        if (prop.propCode == "CLIPStatus") {
            orderItemProp .add(prop)        
       }
    }
}
return orderItemProp;
1.6	map
com.huawei.bes.om.base.order.core.context.ContextFactory.resetContext("orderContext", "id");
$BindingContext("orderContext").orderId = "940122222224697232" as BigDecimal;
def orderModel = $BindingContext("orderContext")._OrderModel;

def a = [];
for (orderItem in orderModel.order.OrderItem) {
   if (orderItem.itemType == 'offering') {
     a.add(orderItem?.itemId)
   }
}
map  orderModel.order.OrderItem.grep{ it.itemType == 'offering'}, as:'OrderItem',{
      a.add(OrderItem?.itemId)
}
return a
1.7	builder
同步第三方的时候，构建请求对象
builder = new com.huawei.bes.om.ext.tele.order.frame.transformation.engine.builder.OrderMsgTransfBuilder();
def result = builder.SubActivationReq(entity:"com.huawei.bes.inf.base.telecomex.cbs.SubActivationReq"){
    body{
        subAccessCode{
            subscriberKey{
                subscriberKey("2122000001465006")
            } 
        }
        subBasicInfo{
            subProperty {
                code("C_ACTIVE_TIME");
                value(com.huawei.bes.common.utils.time.DateTimeHelper.toStringDateTimeFormat(getNowDate(), "yyyyMMddHHmmss"));
            }
        }
        offeringInst{
            activeTime {
                dateTime(toStringDateTimeFormat(getNowDate(), 'yyyyMMddHHmmss'));
            }
            expirationTime {
                dateTime(toStringDateTimeFormat(getNowDate(), 'yyyyMMddHHmmss'));
            }
            offeringKey {
                offeringKey {
                     offeringID("1222222464" as BigDecimal);
                     offeringName("IO211000101242");
                     purchaseSeq("2122000002266056"  as BigDecimal);
                }
                offeringOwner {
                    ownerKey("2122000000829001");
                    ownerType("C");
                }
            }
        }
    }
}
return result

1.8	make
def batchQuerySubscribersRequest = $BC("com.huawei.bes.cm.biz.subscription4telecom").BatchQuerySubscribersRequest.make([
                                    keyList: querySubscriberList,
                                    KeyType: request.keyType,
                                    beId   : request.beId
                            ]);
                            def batchQuerySubscribersResponse = callBusinessService("com.huawei.bes.cm.biz.subscription4telecom.BatchSubscriberService", "batchQuerySubscribers", batchQuerySubscribersRequest);

1.9	闭包
def result = {x, y->
 x*y;
x+y;
}
def b = result(3,4);
return b

2	调用服务
2.1	Entity
def batchQueryProductInstResponse = getFacadeContext().getEntity().find("com.huawei.bes.cm.base_iot_operationworkbench_ctz.component.BatchQueryProductInstQueryEntity", "queryProductInst", batchQueryProductInstRequest);

--findByKey根据主键查询
//通过oId查找表OM_REALNAME_VERIFY_LOG_CTZ对应数据
def oId = 11000001005 as BigDecimal;
def realnameVerifyLogInfo = $BC("com.huawei.bes.om.ext_iot_common_ctz.component").OmRealNameVerifyLogEntity.findByKey(oId);

--findOneBy${criteria}根据criteria查询单条
//根据折扣批次ID查询商品订购实
def params = [:];
params.put("beId", 1100 as BigDecimal);
params.put("status", '2');
params.put("custType", 'C');
params.put("custId", 4722000000264016 as BigDecimal);
params.put("acctDiscountId", 4710000000004102 as BigDecimal);
response = $BC("com.huawei.bes.cm.base_iot_common_ctz.component").InfOfferingInstCtzQueryEntity.findOneByqueryAcctDctId(params);

--findBy${criteria}根据criteria查询Entity列表
//根据折扣批次ID查询商品订购实例表
def params = [:];
params.put("beId", 1100 as BigDecimal);
params.put("status", '2');
params.put("custType", 'C');
params.put("custId", 4722000000264016 as BigDecimal);
params.put("acctDiscountId", 4710000000004102 as BigDecimal);
response = $BC("com.huawei.bes.cm.base_iot_common_ctz.component").InfOfferingInstCtzQueryEntity.findByqueryAcctDctId(params);

--findCountBy${criteria}根据criteria查询Entity列表数量
//根据折扣批次ID查询商品订购实列表数量
def params = [:];
params.put("beId", 1100 as BigDecimal);
params.put("status", '2');
params.put("custType", 'C');
params.put("custId", 4722000000264016 as BigDecimal);
params.put("acctDiscountId", 4710000000004102 as BigDecimal);
response = $BC("com.huawei.bes.cm.base_iot_common_ctz.component").InfOfferingInstCtzQueryEntity.findCountByqueryAcctDctId(params);

--make Entity根据已有的Entity构造实例
def pageQuery = $BC("com.huawei.bes.cm.base.common").PageViewVO.make([startNum: 0, pageStart: 0, pageSize: 1]);

2.2	BO

2.3	BS

2.4	callBusinessService
def response = callBusinessService(“BSpackageName”,”operator”,request);
2.5	$BC
def request = $BC(“”).entityName.make([]);

def request = $BC(“”).entityName.make();
request.a = ;
request.b = ;
request.c = ;


3	灰度调试工具
3.1	

com.huawei.bes.om.base.order.core.context.ContextFactory.resetContext("orderContext", "id");
$BindingContext("orderContext").orderId = "940122222224697232" as BigDecimal;

def orderModel = $BindingContext("orderContext")._OrderModel;
